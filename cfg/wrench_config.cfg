PACKAGE = "cartesian_impedance_controller"
    
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#gen.add("wrench_torque_joint1", double_t, 0, "Apply a torque on joint 1 [Nm].",    0, -1,   1)
#gen.add("wrench_torque_joint2", double_t, 0, "Apply a torque on joint 2 [Nm].",    0, -1,   1)
#gen.add("wrench_torque_joint3", double_t, 0, "Apply a torque on joint 3 [Nm].",    0, -1,   1)
#gen.add("wrench_torque_joint4", double_t, 0, "Apply a torque on joint 4 [Nm].",    0, -1,   1)
#gen.add("wrench_torque_joint5", double_t, 0, "Apply a torque on joint 5 [Nm].",    0, -1,   1)
#gen.add("wrench_torque_joint6", double_t, 0, "Apply a torque on joint 6 [Nm].",    0, -1,   1)
#gen.add("wrench_torque_joint7", double_t, 0, "Apply a torque on joint 7 [Nm].",    0, -1,   1)


gen.add("wrench_direction_x", double_t, 0, "Apply a wrench  in the x direction at the TCP",    0, -5,   5)
gen.add("wrench_direction_y", double_t, 0, "Apply a wrench  in the x direction at the TCP",    0, -5,   5)
gen.add("wrench_direction_z", double_t, 0, "Apply a wrench  in the x direction at the TCP",    0, -5,   5)

gen.add("apply_wrench", bool_t, 0, "Apply the wrench by setting the value to true.",   False)

exit(gen.generate(PACKAGE, "cartesian_impedance_controller", "wrench_config"))
